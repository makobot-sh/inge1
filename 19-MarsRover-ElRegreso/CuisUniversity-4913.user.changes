

----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:20:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (13 October 2021 15:21:02) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:21:02) CuisUniversity-4913.image priorSource: 18661997!

----QUIT----(13 October 2021 15:26:07) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:26:08) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:26:08) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (25 October 2021 20:32:58) as C:\Users\ferra\Desktop\CUIS SmallTalk\windows64\CuisUniversity-4913.image!


----End fileIn of C:\Users\ferra\Desktop\MarsRover-WithHeading.st----!
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'AF 10/25/2021 20:34:34' prior: 50915229 overrides: 50915164!
rotateRight

	^marsRover headSouth! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'AF 10/25/2021 20:34:41' prior: 50915224 overrides: 50915160!
rotateLeft

	^marsRover headNorth! !
!MarsRoverHeadingEast methodsFor: 'moving' stamp: 'AF 10/25/2021 20:34:47' prior: 50915214 overrides: 50915173!
moveBackward

	^marsRover moveWest! !
!MarsRoverHeadingEast methodsFor: 'moving' stamp: 'AF 10/25/2021 20:34:55' prior: 50915219 overrides: 50915177!
moveForward

	^marsRover moveEast! !
!MarsRoverHeadingNorth methodsFor: 'moving' stamp: 'AF 10/25/2021 20:35:10' prior: 50915247 overrides: 50915173!
moveBackward

	^marsRover moveSouth! !
!MarsRoverHeadingNorth methodsFor: 'moving' stamp: 'AF 10/25/2021 20:35:14' prior: 50915252 overrides: 50915177!
moveForward

	^marsRover moveNorth! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'AF 10/25/2021 20:35:26' prior: 50915257 overrides: 50915160!
rotateLeft

	^marsRover headWest! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'AF 10/25/2021 20:35:31' prior: 50915262 overrides: 50915164!
rotateRight


	^marsRover headEast! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'AF 10/25/2021 20:35:37' prior: 50915290 overrides: 50915160!
rotateLeft

	^marsRover headEast! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'AF 10/25/2021 20:35:42' prior: 50915295 overrides: 50915164!
rotateRight

	^marsRover headWest! !
!MarsRoverHeadingSouth methodsFor: 'moving' stamp: 'AF 10/25/2021 20:35:48' prior: 50915280 overrides: 50915173!
moveBackward

	^marsRover moveNorth! !
!MarsRoverHeadingSouth methodsFor: 'moving' stamp: 'AF 10/25/2021 20:35:52' prior: 50915285 overrides: 50915177!
moveForward
	^marsRover moveSouth! !
!MarsRoverHeadingSouth methodsFor: 'moving' stamp: 'AF 10/25/2021 20:35:53' prior: 50915391 overrides: 50915177!
moveForward

	^marsRover moveSouth! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AF 10/25/2021 20:35:59'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AF 10/25/2021 20:35:59'!
PASSED!
!MarsRoverHeadingWest methodsFor: 'moving' stamp: 'AF 10/25/2021 20:36:09' prior: 50915313 overrides: 50915173!
moveBackward

	^marsRover moveEast! !
!MarsRoverHeadingWest methodsFor: 'moving' stamp: 'AF 10/25/2021 20:36:14' prior: 50915318 overrides: 50915177!
moveForward

	^marsRover moveWest! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'AF 10/25/2021 20:36:21' prior: 50915323 overrides: 50915160!
rotateLeft

	^marsRover headSouth! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'AF 10/25/2021 20:36:25' prior: 50915328 overrides: 50915164!
rotateRight

	^marsRover headNorth! !
!MarsRoverHeading methodsFor: 'heading' stamp: 'AF 10/25/2021 20:36:35' prior: 50915160!
rotateLeft

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'heading' stamp: 'AF 10/25/2021 20:36:39' prior: 50915164!
rotateRight

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'testing' stamp: 'AF 10/25/2021 20:36:45' prior: 50915168!
isHeading: aHeadingType

	^self isKindOf: aHeadingType ! !
!MarsRoverHeading methodsFor: 'moving' stamp: 'AF 10/25/2021 20:36:51' prior: 50915173!
moveBackward

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'moving' stamp: 'AF 10/25/2021 20:36:55' prior: 50915177!
moveForward

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'initialization' stamp: 'AF 10/25/2021 20:37:02' prior: 50915181!
initializeFor: aMarsRover 

	marsRover := aMarsRover.! !
!MarsRover methodsFor: 'heading' stamp: 'AF 10/25/2021 20:37:11' prior: 50915043!
headEast

	head := MarsRoverHeadingEast for: self! !
!MarsRover methodsFor: 'heading' stamp: 'AF 10/25/2021 20:37:16' prior: 50915047!
headNorth

	head := MarsRoverHeadingNorth for: self ! !
!MarsRover methodsFor: 'heading' stamp: 'AF 10/25/2021 20:37:20' prior: 50915051!
headSouth

	head := MarsRoverHeadingSouth for: self! !
!MarsRover methodsFor: 'heading' stamp: 'AF 10/25/2021 20:37:24' prior: 50915055!
headWest

	head := MarsRoverHeadingWest for: self ! !
!MarsRover methodsFor: 'heading' stamp: 'AF 10/25/2021 20:37:28' prior: 50915059!
rotateLeft

	head rotateLeft! !
!MarsRover methodsFor: 'heading' stamp: 'AF 10/25/2021 20:37:32' prior: 50915063!
rotateRight

	head rotateRight! !
!MarsRover methodsFor: 'exceptions' stamp: 'AF 10/25/2021 20:37:38' prior: 50915028!
invalidCommandErrorDescription

	^'Invalid command'! !
!MarsRover methodsFor: 'exceptions' stamp: 'AF 10/25/2021 20:37:42' prior: 50915032!
signalInvalidCommand

	self error: self invalidCommandErrorDescription ! !
!MarsRover methodsFor: 'initialization' stamp: 'AF 10/25/2021 20:37:50' prior: 50915037!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	
	head := aHeadingType for: self ! !
!MarsRover methodsFor: 'testing' stamp: 'AF 10/25/2021 20:37:59' prior: 50915067!
isAt: aPosition heading: aHeadingType

	^position = aPosition and: [ head isHeading: aHeadingType ]! !
!MarsRover methodsFor: 'testing' stamp: 'AF 10/25/2021 20:38:12' prior: 50915073!
isBackwardCommand: aCommand

	^aCommand = $b! !
!MarsRover methodsFor: 'testing' stamp: 'AF 10/25/2021 20:38:18' prior: 50915077!
isForwardCommand: aCommand

	^aCommand = $f ! !
!MarsRover methodsFor: 'testing' stamp: 'AF 10/25/2021 20:38:23' prior: 50915081!
isRotateLeftCommand: aCommand

	^aCommand = $l! !
!MarsRover methodsFor: 'testing' stamp: 'AF 10/25/2021 20:38:27' prior: 50915085!
isRotateRightCommand: aCommand

	^aCommand = $r! !
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 20:38:32' prior: 50915089!
moveBackward

	head moveBackward! !
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 20:38:36' prior: 50915093!
moveEast

	position := position + (1@0)! !
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 20:38:40' prior: 50915097!
moveForward

	head moveForward! !
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 20:38:44' prior: 50915101!
moveNorth

	position := position + (0@1)! !
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 20:38:48' prior: 50915105!
moveSouth

	position := position + (0@-1)! !
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 20:38:52' prior: 50915109!
moveWest

	position := position + (-1@0)! !
!MarsRover methodsFor: 'command processing' stamp: 'AF 10/25/2021 20:38:57' prior: 50915113!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ]
! !
!MarsRover methodsFor: 'command processing' stamp: 'AF 10/25/2021 20:39:00' prior: 50915601!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ]! !
!MarsRover methodsFor: 'command processing' stamp: 'AF 10/25/2021 20:39:17' prior: 50915119!
processCommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward ].
	
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !
!MarsRoverTest methodsFor: 'assertions' stamp: 'AF 10/25/2021 20:39:28' prior: 50915002!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	| marsRover |
	
	marsRover := MarsRover at: startPosition heading: startHeadingType. 
	
	marsRover process: commands.
	
	self assert: (marsRover isAt: newPosition heading: newHeadingType)! !
!MarsRoverTest methodsFor: 'assertions' stamp: 'AF 10/25/2021 20:39:32' prior: 50915629!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	| marsRover |
	
	marsRover := MarsRover at: startPosition heading: startHeadingType. 
	

	marsRover process: commands.
	
	self assert: (marsRover isAt: newPosition heading: newHeadingType)! !
!MarsRoverTest methodsFor: 'assertions' stamp: 'AF 10/25/2021 20:39:35' prior: 50915643!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	| marsRover |
	
	marsRover := MarsRover at: startPosition heading: startHeadingType. 
	

	marsRover process: commands.
	
	self assert: (marsRover isAt: newPosition heading: newHeadingType)! !
!MarsRoverTest methodsFor: 'assertions' stamp: 'AF 10/25/2021 20:39:39' prior: 50915657!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	| marsRover |
	
	marsRover := MarsRover at: startPosition heading: startHeadingType. 
	

	marsRover process: commands.
	
	
	self assert: (marsRover isAt: newPosition heading: newHeadingType)! !
!MarsRoverTest methodsFor: 'headings' stamp: 'AF 10/25/2021 20:39:49' prior: 50914986!
east

	^ MarsRoverHeadingEast ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'AF 10/25/2021 20:39:58' prior: 50914990!
north
	^ MarsRoverHeadingNorth ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'AF 10/25/2021 20:39:59' prior: 50915687!
north

	^ MarsRoverHeadingNorth ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'AF 10/25/2021 20:40:06' prior: 50914994!
south
	^ MarsRoverHeadingSouth ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'AF 10/25/2021 20:40:07' prior: 50915695!
south

	^ MarsRoverHeadingSouth ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'AF 10/25/2021 20:40:11' prior: 50914998!
west


	^ MarsRoverHeadingWest ! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AF 10/25/2021 20:40:39' prior: 50914857!
test01DoesNotMoveWhenNoCommand

	self 
	
		assertIsAt: 1@2 
		
		heading: self north 
		
		afterProcessing: '' 
		
		whenStartingAt: 1@2 
		
		heading: self north 
		
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AF 10/25/2021 20:42:03' prior: 50914865!
test02IsAtFailsForDifferentPosition

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self deny: (marsRover isAt: 1@2 heading: self north)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AF 10/25/2021 20:42:13' prior: 50914873!
test03IsAtFailsForDifferentHeading

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	
	self deny: (marsRover isAt: 1@1 heading: self south)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AF 10/25/2021 20:42:16' prior: 50915723!
test03IsAtFailsForDifferentHeading

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	
	self deny: (marsRover isAt: 1@1 heading: self south)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AF 10/25/2021 20:42:18' prior: 50915732!
test03IsAtFailsForDifferentHeading


	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	
	self deny: (marsRover isAt: 1@1 heading: self south)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AF 10/25/2021 20:42:29' prior: 50914881!
test04IncrementsYAfterMovingForwardWhenHeadingNorth

	self
	
		assertIsAt: 1@3 
		heading: self north 
		afterProcessing: 'f' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AF 10/25/2021 20:42:32' prior: 50915748!
test04IncrementsYAfterMovingForwardWhenHeadingNorth

	self
	
		assertIsAt: 1@3 
		heading: self north 
		afterProcessing: 'f' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'AF 10/25/2021 20:42:47' prior: 50915757!
test04IncrementsYAfterMovingForwardWhenHeadingNorth

	self
	
		assertIsAt: 1@3 
		
		heading: self north 
		
		afterProcessing: 'f' 
		
		whenStartingAt: 1@2 
		
		heading: self north 
		
! !

TestCase subclass: #MarsRoverFollowingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverFollowingTest category: 'MarsRover-WithHeading' stamp: 'AF 10/25/2021 20:55:35'!
TestCase subclass: #MarsRoverFollowingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRenamed: #MarsRoverFollowingTest as: #MarsRoverXXXXTest stamp: 'AF 10/25/2021 21:00:29'!
Smalltalk renameClassNamed: #MarsRoverFollowingTest as: #MarsRoverXXXXTest!
!MarsRoverXXXXTest methodsFor: 'nil' stamp: 'AF 10/25/2021 21:04:20'!
test01

	|rover|
	
	rover := MarsRover initializeAt: 0@0 heading: #North ! !
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:08:58' prior: 50915793!
test01

	|rover|
	
	rover := MarsRover initializeAt: 0@0 heading: MarsRoverHeadingNorth.
	
	self assert: 0@0 equals: MarsRover YYYY.! !
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:09:40' prior: 50915799!
test01

	|rover|
	
	rover := MarsRover initializeAt: 0@0 heading: MarsRoverHeadingNorth.
	
	self assert: 0@0 equals: rover YYYY.! !

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:11:48'!
ERROR!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:12:15' prior: 50915807!
test01

	|rover|
	
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	self assert: 0@0 equals: rover YYYY.! !

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:12:16'!
ERROR!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:24:01' prior: 50915817!
test01

	| marsRover logReadStream x |
	
	marsRover _ MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	x _ self trackPositionChangesOf: marsRover.
	
	marsRover process: 'f'.
	
	logReadStream _ x readStream.
	
	self assert: '1@2' equals: logReadStream nextLine.
	self assert: logReadStream atEnd.! !

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:24:01'!
ERROR!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:24:07'!
trackPositionChangesOf: aMarsRover 
	self shouldBeImplemented.! !
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:24:51' prior: 50915842!
trackPositionChangesOf: aMarsRover 
	
	^1@2! !

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:24:52'!
ERROR!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:28:21' prior: 50915848!
trackPositionChangesOf: aMarsRover 
	
	^'1@2'! !

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:28:22'!
PASSED!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:31:36'!
test02

	| marsRover logReadStream x |
	
	marsRover _ MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	x _ self trackPositionChangesOf: marsRover.
	
	marsRover process: 'b'.
	
	logReadStream _ x readStream.
	
	self assert: '1@0' equals: logReadStream nextLine.
	self assert: logReadStream atEnd.! !

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:31:36'!
FAILURE!

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:37:14'!
FAILURE!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:42:05' prior: 50915856!
trackPositionChangesOf: aMarsRover 
	
	|logger|
	
	logger := WriteStream on: ''.
	
	^aMarsRover trackPositionChangesTo: logger.! !

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:42:09'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:42:24'!
trackPositionChangesTo: aWriteStream 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'AF 10/25/2021 21:43:47'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionChangesLogger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:43:46' prior: 50915890!
trackPositionChangesTo: aLogger

	positionChangesLogger := aLogger.
	
	
	! !

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:43:50'!
ERROR!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:44:14' prior: 50915863!
test02

	| marsRover logReadStream x |
	
	marsRover _ MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	x _ self trackPositionChangesOf: marsRover.
	
	marsRover process: 'ff'.
	
	logReadStream _ x readStream.
	
	self assert: '1@0' equals: logReadStream nextLine.
	self assert: logReadStream atEnd.! !

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:44:15'!
ERROR!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:44:54' prior: 50915827!
test01

	| marsRover logReadStream x |
	
	marsRover _ MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	x _ self trackPositionChangesOf: marsRover.
	
	marsRover process: 'f'.
	
	logReadStream _ ReadStream on: x.
	
	self assert: '1@2' equals: logReadStream nextLine.
	self assert: logReadStream atEnd.! !

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:44:56'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:45:16' prior: 50915904!
trackPositionChangesTo: aLogger

	^positionChangesLogger := aLogger.
	
	
	! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AF 10/25/2021 21:45:17'!
PASSED!

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:45:21'!
FAILURE!

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:45:21'!
ERROR!

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:45:25'!
FAILURE!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:48:27' prior: 50915929!
test01

	| marsRover logReadStream x |
	
	marsRover _ MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	x _ self trackPositionChangesOf: marsRover.
	
	marsRover process: 'f'.
	
	logReadStream _ ReadStream on: x contents.
	
	self assert: '1@2' equals: logReadStream nextLine.
	self assert: logReadStream atEnd.! !

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:48:28'!
FAILURE!

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:48:36'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 21:51:11' prior: 50915588!
moveNorth

	position := position + (0@1).
	
	positionChangesLogger isNil ifFalse:[positionChangesLogger nextPutAll: position asString]! !

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:51:14'!
PASSED!

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:51:14'!
PASSED!

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:51:14'!
ERROR!

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:51:14'!
ERROR!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:52:01' prior: 50915913!
test02

	| marsRover logReadStream x |
	
	marsRover _ MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	x _ self trackPositionChangesOf: marsRover.
	
	marsRover process: 'ff'.
	
	logReadStream _ ReadStream on: x contents.
	
	self assert: '1@0' equals: logReadStream nextLine.
	self assert: logReadStream atEnd.! !

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:52:04'!
FAILURE!
!MarsRoverXXXXTest methodsFor: 'as yet unclassified' stamp: 'AF 10/25/2021 21:52:57' prior: 50916048!
test02

	| marsRover logReadStream x |
	
	marsRover _ MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	x _ self trackPositionChangesOf: marsRover.
	
	marsRover process: 'ff'.
	
	logReadStream _ ReadStream on: x contents.
	
	self assert: '1@2' equals: logReadStream nextLine.
	self assert: '1@3' equals: logReadStream nextLine.
	self assert: logReadStream atEnd.! !

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:52:58'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 21:54:05' prior: 50916030!
moveNorth

	position := position + (0@1).
	
	positionChangesLogger isNil ifFalse:[positionChangesLogger nextPutAll: position printString; newLine ]! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AF 10/25/2021 21:54:06'!
PASSED!

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 21:54:09'!
PASSED!

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 21:54:09'!
PASSED!
!MarsRover methodsFor: 'moving' stamp: 'AF 10/25/2021 22:00:14' prior: 50916081!
moveNorth

	position := position + (0@1).
	
	positionChangesLogger ifNotNil:[positionChangesLogger nextPutAll: position printString; newLine ]! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'AF 10/25/2021 22:00:15'!
PASSED!

!testRun: #MarsRoverXXXXTest #test01 stamp: 'AF 10/25/2021 22:00:19'!
PASSED!

!testRun: #MarsRoverXXXXTest #test02 stamp: 'AF 10/25/2021 22:00:19'!
PASSED!

----SNAPSHOT----(25 October 2021 22:07:00) CuisUniversity-4913.image priorSource: 18661997!